#!/usr/bin/env ruby
#

unless Kernel.respond_to?(:require_relative)
  module Kernel
    def require_relative(path)
      require File.join(File.dirname(caller[0]), path.to_str)
    end
  end
end

require 'optparse'
require_relative 'lib/rpatch'

location = "."
patches = []
patch_level = 1

OptionParser.new do |opts|
  opts.banner = "Usage: rpatch [options] [originalfile [patchfile]]"
  opts.on("-p", "--strip num", "Patch level") {|v| patch_level = v.to_i}
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit 0
  end
end.parse!

case ARGV.size
when 0
  patches << STDIN
when 1
  location = ARGV.shift
  patches << STDIN
else
  location = ARGV.shift
  until ARGV.empty? do
    patches << ARGV.shift
  end
end

result = Rpatch::Patch.apply(location, patches, patch_level)
exit 1 unless result
